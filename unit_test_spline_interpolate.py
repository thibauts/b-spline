from pprint import pprint

from spline_interpolate import interpolate as py_interpolate
import execjs
js_interpolate = execjs.compile(open('spline_interpolate.js').read()).call

test_data = (
		{
			'degree': 4,
			'points': [ [3.547949666913399, 4.015292376017764, 0.0 ],  [2.326818379115456, 4.735446725231935, 0.0 ],  [-1.364091662421916, 9.383406024977491, 0.0 ],  [5.407467426288706, 5.190828314342068, 0.0 ],  [9.283378812528207, 9.836223562475746, 0.0 ],  [7.623911799584189, 2.411642775044972, 0.0 ],  [4.501326022260053, 3.513515346887946, 0.0 ],  [3.547949666913399, 4.015292376017764, 0.0 ] ],
			'knots': [0.0, 0.0, 0.0, 0.0, 4.253005428938497, 9.534503315359672, 11.99652095351233, 16.56330621460171, 19.79538912768852, 19.79538912768852, 19.79538912768852, 19.79538912768852 ],
			'weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]
		},
		{
			'degree': 4,
			'points': [[2.108082901554406, 5.141524796447076], [0.7583524353239584, 4.740919863547628], [6.112719673151601, 11.88968351491566], [6.775385923652597, 4.120574801539231], [7.496891191709846, 5.170037009622502]],
			'knots': [0.0, 0.0, 0.0, 0.0, 4.223779089110401, 8.044442251738637, 8.044442251738637, 8.044442251738637, 8.044442251738637],
			'weights': [1.0, 1.0, 1.0, 1.0, 1.0]
		},
		{
			'degree': 4,
			'points': [[1.865729089563288, 4.129341228719467], [0.9352941109335959, 3.339881246851848], [1.07707280518791, 10.63975373050501], [6.823476267334954, 4.926874161289669], [3.499146498370247, 10.5156962393522], [11.79892472220518, 9.81094610519843], [5.056002904511672, 1.698261958842148], [9.269209215676769, 9.566841998755422], [5.417039874352289, 1.953335288615642], [2.358861226642762, 7.522969253225606], [2.521509992598078, 6.510111028867505]],
			'knots': [0.0, 0.0, 0.0, 0.0, 3.66068392678916, 7.190934628657493, 9.66530360338355, 13.48968853730038, 18.21467930640978, 21.0852588532968, 24.87690082547662, 27.95440429963383, 27.95440429963383, 27.95440429963383, 27.95440429963383],
			'weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
		}
		# more tests can be added here
	,)

num_pt_checks = 100
for td in test_data:
	for i in range(num_pt_checks):
		t = i / num_pt_checks
		js_pt = js_interpolate('interpolate', t, td['degree'], td['points'], td['knots'])
		py_pt = py_interpolate(t, td['degree'], td['points'], td['knots'])

		if js_pt != py_pt:
			print('test_data')
			pprint(test_data)
			print('js', js_pt, '!=', 'py', py_pt)
			raise ValueError('not equivilent values')

